package cg41;

import java.sql.SQLException;

public class RemoveCourse extends javax.swing.JFrame {
    int thisError, numRecords, i;
    String myCourse, myLocalString2, catName, myLocalString,
            myCourseArray[], course;
    boolean removeCourse;

    /** Creates new form RemoveCompletedCourse */
    public RemoveCourse() {
        initComponents();
        loadCourses();
    }

    public String getCategoryName(int catID){
        myLocalString2 = "";
        thisError = 0;
        myLocalString2 = "select * from category where CatID = '"
                + catID + "'";
        CG41App.dbObject2.sqlString = myLocalString2;
        thisError = CG41App.dbObject2.getRecordSetBySelect();
        try{
            CG41App.dbObject2.rs.next();
            catName = CG41App.dbObject2.rs.getString ("CategoryName");
        }catch (SQLException ex){
                // Show errors in console
                System.out.println("SQLException: " + ex.getMessage());
                System.out.println("SQLState: " + ex.getSQLState());
                System.out.println("VendorError: " + ex.getErrorCode());
                thisError = ex.getErrorCode ();
                UserMessageBox MyMessage = new UserMessageBox ();
                MyMessage.setMessage ("SQLException: " + ex.getMessage());
                MyMessage.setVisible (true);
        }
        return catName;
    }

    /**
     * Method used to load the courses into the combo box
     */
    private void loadCourses() {
        //get the number of courses in the database to use later
        CG41App.dbObject.sqlString = "select COUNT(*) from course";
        thisError = CG41App.dbObject.getCountBySelect(); //execute
        numRecords = CG41App.dbObject.NumberOfRecords;
        //select all the courses to load from the database
        CG41App.dbObject.sqlString = "select CourseID, CatID, CourseName from course";
        thisError = CG41App.dbObject.getRecordSetBySelect(); //execute
        if (thisError == 0) { //if no error
            try {
                //for amount of records, load each record in the combobox
                for (i = 0; i < numRecords; i++) {
                    CG41App.dbObject.rs.next();
                    //where getCategoryName is called, it will get the category
                    //name for the course recieved from the database
                    course = CG41App.dbObject.rs.getString(1) + ", "
                + getCategoryName(Integer.parseInt(CG41App.dbObject.rs.getString(2))) +
                            ", " + CG41App.dbObject.rs.getString(3);
                    courseCombox.addItem(course);
                }
            } catch (SQLException ex) {
                // Show errors in console
                System.out.println("SQLException: " + ex.getMessage());
                System.out.println("SQLState: " + ex.getSQLState());
                System.out.println("VendorError: " + ex.getErrorCode());
                thisError = ex.getErrorCode();

                UserMessageBox MyMessage = new UserMessageBox();
                MyMessage.setMessage("SQLException: " + ex.getMessage());
                MyMessage.setVisible(true);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        exitBtn = new javax.swing.JButton();
        removeCourseBtn = new javax.swing.JButton();
        courseCombox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cg41.CG41App.class).getContext().getResourceMap(RemoveCourse.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        exitBtn.setText(resourceMap.getString("exitBtn.text")); // NOI18N
        exitBtn.setName("exitBtn"); // NOI18N
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        removeCourseBtn.setText(resourceMap.getString("removeCourseBtn.text")); // NOI18N
        removeCourseBtn.setName("removeCourseBtn"); // NOI18N
        removeCourseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCourseBtnActionPerformed(evt);
            }
        });

        courseCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        courseCombox.setName("courseCombox"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(removeCourseBtn)
                        .addGap(18, 18, 18)
                        .addComponent(exitBtn)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                        .addGap(113, 113, 113))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(courseCombox, 0, 260, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(courseCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitBtn)
                    .addComponent(removeCourseBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Method used to close the window on button click
     */
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        dispose();
}//GEN-LAST:event_exitBtnActionPerformed

    /**
     * Removes the selected governor from the database on press of button
     */
    private void removeCourseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCourseBtnActionPerformed
        myLocalString = ""; //reset used variables
        myCourse = "";
        thisError = 0;
        removeCourse = false;

        myCourse = courseCombox.getSelectedItem().toString(); //get Completed Course info
        if(myCourse.equals("-")){
            removeCourse = false;
            //show an error to the user
            UserMessageBox MyMessage = new UserMessageBox();
            MyMessage.setMessage("Please select a course to remove.");
            MyMessage.setVisible(true);
        }else{
            UserConfirmationBox userConfirm = new UserConfirmationBox(this, true);
            //make sure the user knows what they're removing
            userConfirm.setMessage("Removing Course:\n"
                    + "The course that you wish to remove is:\n"
                    + myCourse
                    + ".\nUpon deleting this course,\nany completed"
                    + "\ncourses that require this course\nwill also be"
                    + "deleted.\nAre you sure you want to continue?");
            userConfirm.setVisible(true);
            removeCourse = userConfirm.removeConfirmation; //take the result from the confirm window
            userConfirm.dispose(); //make sure we close it
        }
        if (removeCourse == false) { //if they don't want to delete
                UserMessageBox MyMessage = new UserMessageBox();
                MyMessage.setMessage("The Course:\n"
                        + myCourse
                        + ".\nWas not removed.");
                MyMessage.setVisible(true);
            }
        else if(removeCourse == true) { //if they want to remove the course
            myCourseArray = myCourse.split(","); //split it to get the ID
            //delete where the course IDs match
            myLocalString = "delete from course where CourseID=" + myCourseArray[0];
            CG41App.dbObject2.sqlString = myLocalString; //set the SQL string
            thisError = CG41App.dbObject2.deleteRecord(); //execute the query

            //reset the UI for the user to remove another course
            courseCombox.removeAllItems();
            courseCombox.addItem("-");
            courseCombox.setSelectedIndex(0);
            loadCourses();

            // Report completiton to the user
            if(thisError == 0){
                UserMessageBox MyMessage = new UserMessageBox();
                MyMessage.setMessage("Course Successfully Deleted");
                MyMessage.setVisible(true);
            }else{
                UserMessageBox MyMessage = new UserMessageBox();
                MyMessage.setMessage("There was an Error deleting the Course.");
                MyMessage.setVisible(true);
            }
        }
        
}//GEN-LAST:event_removeCourseBtnActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoveCourse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox courseCombox;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton removeCourseBtn;
    // End of variables declaration//GEN-END:variables

}
