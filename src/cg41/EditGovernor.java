package cg41;

import java.sql.SQLException;
import java.util.Date;
import javax.swing.WindowConstants;

public class EditGovernor extends javax.swing.JFrame {

    boolean myLocalError = false;
    String myLocalString, endDateString, governor, myGov,
            elecDateString, errorMessage, myGovArray[];
    int thisError, i, numRecords = 0;
    Date endDate;
    Date elecDate;

    /** Creates new form AddGovernor */
    public EditGovernor() {
        initComponents();
        loadGovernors();
    }
    /**
     * THis method loads each governor from the database into a combo box
     */
    private void loadGovernors() {
        CG41App.dbObject.sqlString = "select COUNT(*) from governor"; //count governors
        thisError = CG41App.dbObject.getCountBySelect();//execute query
        numRecords = CG41App.dbObject.NumberOfRecords;
        CG41App.dbObject.sqlString = "select GovID, Firstname, Surname from governor";
        thisError = CG41App.dbObject.getRecordSetBySelect();//execute query
        if (thisError == 0) {
            try {
                for (i = 0; i < numRecords; i++) {
                    CG41App.dbObject.rs.next(); //concatonate each governor
                    governor = CG41App.dbObject.rs.getString(1) + ", "
                            + CG41App.dbObject.rs.getString(2) + " "
                            + CG41App.dbObject.rs.getString(3);
                    compGovCombox.addItem(governor); //add the governor
                }
            } catch (SQLException ex) {
                // Show errors in console
                System.out.println("SQLException: " + ex.getMessage());
                System.out.println("SQLState: " + ex.getSQLState());
                System.out.println("VendorError: " + ex.getErrorCode());
                thisError = ex.getErrorCode();

                UserMessageBox MyMessage = new UserMessageBox();
                MyMessage.setMessage("SQLException: " + ex.getMessage());
                MyMessage.setVisible(true);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        govIdOutLbl = new javax.swing.JLabel();
        endDateLbl = new javax.swing.JLabel();
        loadGovBtn = new javax.swing.JButton();
        endDateChooser = new com.toedter.calendar.JDateChooser();
        lstNamLbl = new javax.swing.JLabel();
        frstNamLbl = new javax.swing.JLabel();
        elecDateChooser = new com.toedter.calendar.JDateChooser();
        editGovBtn = new javax.swing.JButton();
        govIdLbl = new javax.swing.JLabel();
        lstNamFld = new javax.swing.JTextField();
        frstNamFld = new javax.swing.JTextField();
        elecDateLbl = new javax.swing.JLabel();
        exitBtn = new javax.swing.JButton();
        compGovCombox = new javax.swing.JComboBox();
        compGovLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cg41.CG41App.class).getContext().getResourceMap(EditGovernor.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        govIdOutLbl.setText(resourceMap.getString("govIdOutLbl.text")); // NOI18N
        govIdOutLbl.setName("govIdOutLbl"); // NOI18N

        endDateLbl.setText(resourceMap.getString("endDateLbl.text")); // NOI18N
        endDateLbl.setName("endDateLbl"); // NOI18N

        loadGovBtn.setText(resourceMap.getString("loadGovBtn.text")); // NOI18N
        loadGovBtn.setName("loadGovBtn"); // NOI18N
        loadGovBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadGovBtnActionPerformed(evt);
            }
        });

        endDateChooser.setName("endDateChooser"); // NOI18N

        lstNamLbl.setText(resourceMap.getString("lstNamLbl.text")); // NOI18N
        lstNamLbl.setName("lstNamLbl"); // NOI18N

        frstNamLbl.setText(resourceMap.getString("frstNamLbl.text")); // NOI18N
        frstNamLbl.setName("frstNamLbl"); // NOI18N

        elecDateChooser.setName("elecDateChooser"); // NOI18N

        editGovBtn.setText(resourceMap.getString("editGovBtn.text")); // NOI18N
        editGovBtn.setName("editGovBtn"); // NOI18N
        editGovBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editGovBtnActionPerformed(evt);
            }
        });

        govIdLbl.setText(resourceMap.getString("govIdLbl.text")); // NOI18N
        govIdLbl.setName("govIdLbl"); // NOI18N

        lstNamFld.setText(resourceMap.getString("lstNamFld.text")); // NOI18N
        lstNamFld.setName("lstNamFld"); // NOI18N

        frstNamFld.setText(resourceMap.getString("frstNamFld.text")); // NOI18N
        frstNamFld.setName("frstNamFld"); // NOI18N

        elecDateLbl.setText(resourceMap.getString("elecDateLbl.text")); // NOI18N
        elecDateLbl.setName("elecDateLbl"); // NOI18N

        exitBtn.setText(resourceMap.getString("exitBtn.text")); // NOI18N
        exitBtn.setName("exitBtn"); // NOI18N
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        compGovCombox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        compGovCombox.setName("compGovCombox"); // NOI18N

        compGovLbl.setText(resourceMap.getString("compGovLbl.text")); // NOI18N
        compGovLbl.setName("compGovLbl"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(elecDateLbl)
                    .addComponent(frstNamLbl)
                    .addComponent(lstNamLbl)
                    .addComponent(endDateLbl)
                    .addComponent(compGovLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(compGovCombox, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(loadGovBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(editGovBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(exitBtn))
                    .addComponent(endDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lstNamFld, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(elecDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(frstNamFld, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(govIdLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(govIdOutLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compGovLbl)
                    .addComponent(loadGovBtn)
                    .addComponent(compGovCombox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(frstNamLbl)
                        .addComponent(frstNamFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(govIdLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(govIdOutLbl))
                        .addGap(5, 5, 5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lstNamLbl)
                    .addComponent(lstNamFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(elecDateLbl)
                    .addComponent(elecDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(endDateLbl)
                    .addComponent(endDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitBtn)
                    .addComponent(editGovBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName(resourceMap.getString("jPanel1.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * This method will wait for the edit button to be pressed before sending off
 * the edited governor to add to the DB
 */
private void editGovBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editGovBtnActionPerformed
    myLocalError = false; //set used variables to blank
    thisError = 0;
    myLocalString = "";

    elecDate = elecDateChooser.getDate(); //get the dates and format them
    elecDateString = String.format("%1$tY-%1$tm-%1$td", elecDate);
    endDate = endDateChooser.getDate();
    endDateString = String.format("%1$tY-%1$tm-%1$td", endDate);

    // Check if all fields are filled in.  If not, then print an error
    // message and don't do any more processing
    if (frstNamFld.getText().equals("")
            || lstNamFld.getText().equals("")
            || elecDateString.equals("null-null-null")
            || endDateString.equals("null-null-null")) {
        myLocalError = true;
    }
    if (myLocalError) {
        // One field must be blank, so error
        UserMessageBox MyMessage = new UserMessageBox();
        MyMessage.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        MyMessage.setMessage("Please Enter All Fields.");
        MyMessage.setTitle("Error Adding Governor");
        MyMessage.setVisible(true);
    }
    errorMessage = "Please check the following: \n\n";
    if (!myLocalError) {
        //validation of first name
        if (!CG41App.validateObject.validateFirstName(frstNamFld.getText())) {
            myLocalError = true;
            errorMessage = errorMessage + "First name should begin with a capital"
                    + " and be no longer than 10 characters. \n\n";
        }
        //validation of last name
        if (!CG41App.validateObject.validateSurname(frstNamFld.getText())) {
            myLocalError = true;
            errorMessage = errorMessage + "Last name should begin with a letter"
                    + " and be no longer than 20 characters and can include"
                    + " spaces, dashes and apostrophes. \n\n";
        }
        //check to see if the election date is after the end date
        if (elecDate.after(endDate)) {
            myLocalError = true;
            errorMessage = errorMessage + "Make sure the elected date is before"
                    + " the 'end date'.";
        }
        //DB check
        if (!myLocalError) {
            // TODO Check if already in database
        }
    }
    if (!myLocalError) {//as long as there is no error, we can continue
        myLocalString = "update governor set " + "Firstname=" + "'"
                + frstNamFld.getText().toString() + "'"
                + ", Surname=" + "'" + lstNamFld.getText().toString() + "'"
                + ", ElectionDate=" + "'" + elecDateString + "'" + ", EndDate="
                + "'" + endDateString + "'" + " where GovID= "
                + govIdOutLbl.getText();
        CG41App.dbObject.sqlString = myLocalString;
        thisError = CG41App.dbObject.updateRecord(); //execute string
        if (thisError == 0) {
            UserMessageBox MyMessage = new UserMessageBox();
            MyMessage.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
            MyMessage.setMessage("Editing the Governor was successful.");
            MyMessage.setTitle("Editing Governor Complete");
            MyMessage.setVisible(true);
        }
    } else if (myLocalError) {
        //One of the validation checks failed
        UserMessageBox MyMessage = new UserMessageBox();
        MyMessage.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        MyMessage.setMessage(errorMessage);
        MyMessage.setTitle("Error Adding Governor");
        MyMessage.setVisible(true);
    }
}//GEN-LAST:event_editGovBtnActionPerformed
/**
 * This method closes the window when the exit button is pressed
 */
private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
    dispose();
}//GEN-LAST:event_exitBtnActionPerformed
/**
 * This method will load the selected governor from the governor combo box and
 * enter each part into its respective editable field for the user to edit
 */
private void loadGovBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadGovBtnActionPerformed
    myLocalString = ""; //set all used variables to null
    myGov = "";
    thisError = 0;
    myGov = compGovCombox.getSelectedItem().toString(); //get the selected governor
    myGovArray = myGov.split(","); //split it by comma
    myLocalString = "select * from governor where GovID = '"
            + myGovArray[0] + "'";
    CG41App.dbObject.sqlString = myLocalString; //set the MySQL string
    thisError = CG41App.dbObject.getRecordSetBySelect(); //get the error code
    try { //add the governor to the fields
        CG41App.dbObject.rs.next();
        //get each part of the governor from the database query
        frstNamFld.setText(CG41App.dbObject.rs.getString("Firstname"));
        lstNamFld.setText(CG41App.dbObject.rs.getString("Surname"));
        elecDateChooser.setDate(CG41App.dbObject.rs.getDate("ElectionDate"));
        endDateChooser.setDate(CG41App.dbObject.rs.getDate("EndDate"));
        govIdOutLbl.setText((myGovArray[0]));
    } catch (SQLException ex) {
        // Show errors in console
        System.out.println("SQLException: " + ex.getMessage());
        System.out.println("SQLState: " + ex.getSQLState());
        System.out.println("VendorError: " + ex.getErrorCode());
        thisError = ex.getErrorCode();
        UserMessageBox MyMessage = new UserMessageBox();
        MyMessage.setMessage("SQLException: " + ex.getMessage());
        MyMessage.setVisible(true);
    }
}//GEN-LAST:event_loadGovBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditGovernor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditGovernor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditGovernor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditGovernor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new EditGovernor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox compGovCombox;
    private javax.swing.JLabel compGovLbl;
    private javax.swing.JButton editGovBtn;
    private com.toedter.calendar.JDateChooser elecDateChooser;
    private javax.swing.JLabel elecDateLbl;
    private com.toedter.calendar.JDateChooser endDateChooser;
    private javax.swing.JLabel endDateLbl;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTextField frstNamFld;
    private javax.swing.JLabel frstNamLbl;
    private javax.swing.JLabel govIdLbl;
    private javax.swing.JLabel govIdOutLbl;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loadGovBtn;
    private javax.swing.JTextField lstNamFld;
    private javax.swing.JLabel lstNamLbl;
    // End of variables declaration//GEN-END:variables
}
